client_1:
  model:
    out_channels: 2
    task: graphClassification
  criterion:
    type: CrossEntropyLoss
  train:
    optimizer:
      lr: 0.05
  eval:
    base: 0.263789
client_2:
  model:
    out_channels: 2
    task: graphClassification
  criterion:
    type: CrossEntropyLoss
  train:
    optimizer:
      lr: 0.003
      # weight_decay: 0.01
  eval:
    base: 0.289617
client_3:
  model:
    out_channels: 2
    task: graphClassification
  criterion:
    type: CrossEntropyLoss
  train:
    optimizer:
      lr: 0.0004
  eval:
    base: 0.355404
client_4:
  model:
    out_channels: 2
    task: graphClassification
  criterion:
    type: CrossEntropyLoss
  train:
    optimizer:
      lr: 0.005
      # weight_decay: 0.001
  eval:
    base: 0.176471
client_5:
  model:
    out_channels: 2
    task: graphClassification
  criterion:
    type: CrossEntropyLoss
  train:
    optimizer:
      lr: 0.00008
  eval:
    base: 0.396825
client_6:
  model:
    out_channels: 2
    task: graphClassification
  criterion:
    type: CrossEntropyLoss
  train:
    optimizer:
      lr: 0.0005
  eval:
    base: 0.261580
client_7:
  model:
    out_channels: 2
    task: graphClassification
  criterion:
    type: CrossEntropyLoss
  train:
    optimizer:
      lr: 0.005
      # weight_decay: 0.01
  eval:
    base: 0.302378
client_8:
  model:
    out_channels: 2
    task: graphClassification
  criterion:
    type: CrossEntropyLoss
  train:
    optimizer:
      lr: 0.01
  eval:
    base: 0.211538
client_9:
  model:
    out_channels: 1
    task: graphRegression
  criterion:
    type: MSELoss
  train:
    optimizer:
      lr: 0.05
  eval:
    base: 0.059199
    metrics: ['imp_ratio','mse']
client_10:
  model:
    out_channels: 10
    task: graphRegression
  criterion:
    type: MSELoss
  train:
    optimizer:
      lr: 0.02
  eval:
    base: 0.007083
    metrics: ['imp_ratio','mse']    
client_11:
  model:
    out_channels: 1
    task: graphRegression
  criterion:
    type: MSELoss
  train:
    optimizer:
      lr: 0.02
  eval:
    base: 0.734011
    metrics: ['imp_ratio','mse']
client_12:
  model:
    out_channels: 1
    task: graphRegression
  criterion:
    type: MSELoss
  train:
    optimizer:
      lr: 0.004
  eval:
    base: 1.361326
    metrics: ['imp_ratio','mse']
client_13:
  model:
    out_channels: 12
    task: graphRegression
  criterion:
    type: MSELoss
  train:
    optimizer:
      lr: 0.02
      # weight_decay: 0.0005
  eval:
    base: 0.004389
    metrics: ['imp_ratio','mse']